name: tests

variables:
  - group: unittest-samples
  - name: self_location
    value: "self_location"
  - name: full_self_location
    value: "$(Agent.BuildDirectory)/$(self_location)"
  - name: samples_location
    value: "samples_location"
  - name: full_samples_location
    value: "$(Agent.BuildDirectory)/$(samples_location)"

resources:
  repositories:
    - repository: unittest-samples
      type: github
      name: $(unittest_samples_repository)
      ref: main
      endpoint: github-repo-sa
      trigger: none

trigger: ["*"]
pr: ["*"]

jobs:
  - job: run_test
    pool:
      vmImage: "ubuntu-20.04"
    container:
      image: cccstemp.azurecr.io/assemblyline-root-build:stable
      endpoint: cccstemp
      options: "--user root"

    strategy:
      matrix:
        Python3_9:
          python.version: "3.9"
        #Python3_10:
        #  python.version: "3.10"
        #Python3_11:
        #  python.version: "3.11"

    timeoutInMinutes: 20

    steps:
      - task: UsePythonVersion@0
        displayName: Set python version
        inputs:
          versionSpec: "$(python.version)"
      - checkout: self
        fetchDepth: 1
        path: $(self_location)
      - checkout: unittest-samples
        fetchDepth: 1
        path: $(samples_location)
      - script: |
          set -x # echo on
          ls -al
          whoami
          groups
          export currdir=$(pwd)
          [ ! -d "$(pwd)/tests" ] && echo "No tests found" && exit
          apt-get update
          apt-get install -y libfuzzy-dev libfuzzy2 curl
          if [[ -f "$(pwd)/pkglist.txt" ]]; then
            grep -vE '^#' "$(pwd)/pkglist.txt" | xargs apt install -y
          fi
          # Pinning to this version of Node
          export NODE_VERSION=19.7.0
          cd /usr/local
          curl https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-x64.tar.xz --output node-v${NODE_VERSION}-linux-x64.tar.xz
          [ ! -f node-v${NODE_VERSION}-linux-x64.tar.xz ] && echo "Node did not download properly" && exit
          tar -xJf node-v${NODE_VERSION}-linux-x64.tar.xz --strip 1
          cd $currdir
          node --version
          npm --version
          cd tools
          npm install --verbose
          cd ..
          rm -rf /var/lib/apt/lists/*
          env "PATH=$PATH" python -m pip install -U --no-cache-dir assemblyline assemblyline_v4_service
          [ -f $(pwd)/requirements.txt ] && env "PATH=$PATH" python -m pip install -U --no-cache-dir -r $(pwd)/requirements.txt
          [ -f $(pwd)/tests/requirements.txt ] && env "PATH=$PATH" python -m pip install -U --no-cache-dir -r $(pwd)/tests/requirements.txt
          rm -rf /tmp/* /var/lib/apt/lists/* ~/.cache/pip
        workingDirectory: $(full_self_location)
        displayName: Setup environment
      - script: |
          set -x # echo on
          [ ! -d "$(pwd)/tests" ] && echo "No tests found" && exit
          export REPO_NAME=${BUILD_REPOSITORY_NAME##*/}
          python -m pytest -p no:cacheprovider --durations=10 -rsx -xsvvv --disable-warnings
        workingDirectory: $(full_self_location)
        displayName: Test
