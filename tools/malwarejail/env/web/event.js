// https://developer.mozilla.org/en-US/docs/Web/API/Event
Event = _proxy(function (type, options) {
    // Key properties for MalwareJail
    this._id = _object_id++;
    this._name = "Event[" + this._id + "](" + type + ")";
    util_log("new " + this._name + "()");

    // Instance methods
    // https://developer.mozilla.org/en-US/docs/Web/API/Event

    this.composedPath = function () {
        util_log(this._name + ".composedPath(" + _truncateOutput(Array.prototype.slice.call(arguments, 0).join(",")) + ")");
    }
    this.initEvent = function () {
        util_lo(this._name + ".initEvent(" + _truncateOutput(Array.prototype.slice.call(arguments, 0).join(",")) + ")");
    }
    this.preventDefault = function () {
        util_log(this._name + ".preventDefault(" + _truncateOutput(Array.prototype.slice.call(arguments, 0).join(",")) + ")");
    }
    this.stopImmediatePropagation = function () {
        util_log(this._name + ".stopImmediatePropagation(" + _truncateOutput(Array.prototype.slice.call(arguments, 0).join(",")) + ")");
    }
    this.stopPropagation = function () {
        util_log(this._name + ".stopPropagation(" + _truncateOutput(Array.prototype.slice.call(arguments, 0).join(",")) + ")");
    }

    // Instance properties
    // https://developer.mozilla.org/en-US/docs/Web/API/Event

    _defineSingleProperty(this, "bubbles");
    _defineSingleProperty(this, "cancelable");
    _defineSingleProperty(this, "cancelBubble");
    _defineSingleProperty(this, "composed");
    _defineSingleProperty(this, "currentTarget");
    _defineSingleProperty(this, "defaultPrevented");
    _defineSingleProperty(this, "eventPhase");
    _defineSingleProperty(this, "explicitOriginalTarget");
    _defineSingleProperty(this, "isTrusted");
    _defineSingleProperty(this, "originalTarget");
    _defineSingleProperty(this, "returnValue");
    _defineSingleProperty(this, "srcElement");
    _defineSingleProperty(this, "target");
    _defineSingleProperty(this, "timeStamp");

    // _defineSingleProperty(this, "type");
    this.type = type;

    // According to this: https://unixpapa.com/js/mouse.html
    // 1 is the left button on a mouse
    Object.defineProperty(this, "which", {
        get: function () {
            util_log(this._name + ".which.get() => 1");
            return 1;
        }
    });
});
Event.toString = Event.toJSON = () => {
    return "Event"
}
