class IRService_IRUser {
    constructor() {
    }

    // void IIRUser.AddAllCodeSets([ref] int[] hCodeSets)
    AddAllCodeSets() {

    }

    // void IIRUser.AddCodeSet(string urlCodeSet, string target, [ref] int hCodeSet)
    AddCodeSet() {

    }

    // void IIRUser.CancelLearnKey()
    CancelLearnKey() {

    }

    // void IIRUser.CodeSetHasKey(int hCodeSet, string key, [ref] bool result)
    CodeSetHasKey() {

    }

    // void IIRUser.CreateCodeSet(string target, [ref] int hCodeSet)
    CreateCodeSet() {

    }

    // void IIRUser.DeleteCodeSet(string urlCodeSet)
    DeleteCodeSet() {

    }

    // void IIRUser.DeleteKey(int hCodeSet, string key)
    DeleteKey() {

    }

    // bool Equals(System.Object obj)
    Equals() {

    }

    // void IIRUser.FreeAllCodeSets()
    FreeAllCodeSets() {

    }

    // void IIRUser.GetAlternateKeyNames(string keyname, [ref] string[] alternateKeyNames)
    GetAlternateKeyNames() {

    }

    // int GetHashCode()
    GetHashCode() {

    }

    // void IIRUser.GetKeyNameFromStdKeyCode(ehiProxy.EHCIR_STD_KEYS key, [ref] string keyname)
    GetKeyNameFromStdKeyCode() {

    }

    // string IIRUser.GetRlcForKey(int hCodeSet, string key)
    GetRlcForKey() {

    }

    // void IIRUser.GetStdKeyCodeFromKeyName(string keyname, [ref] ehiProxy.EHCIR_STD_KEYS key)
    GetStdKeyCodeFromKeyName() {

    }

    // type GetType()
    GetType() {

    }

    // void IIRUser.KeyPress(int hCodeSet, string key, ehiProxy.IRKPType type, int duration, bool async)
    KeyPress() {

    }

    // void IIRUser.LearnKey(int hCodeSet, string target, string key, ehiProxy.IIRLearnKeyStatus pStatusCallback)
    LearnKey() {

    }

    // void IIRUser.MatchKey(int hCodeSet, string keyname, [ref] int[] hCodeSets, ehiProxy.IRMatchKeyOptions options, [ref] int[] hM...
    MatchKey() {

    }

    // void IIRUser.QueryCodesetsByDeviceType(string type, [ref] string[] brand, [ref] string[] model, [ref] string[] codeseturl)
    QueryCodesetsByDeviceType() {

    }

    // void IIRUser.QueryConnectedIRDeviceOutputs([ref] string[] deviceoutputs)
    QueryConnectedIRDeviceOutputs() {

    }

    // void IIRUser.QueryIRDeviceCapabilities([ref] uint32 IRDeviceCapabilities)
    QueryIRDeviceCapabilities() {

    }

    // void IIRUser.QueryIRInputDevices([ref] string[] devicenames)
    QueryIRInputDevices() {

    }

    // void IIRUser.QueryIROutputDevices([ref] string[] devicenames)
    QueryIROutputDevices() {

    }

    // void IIRUser.SaveCodeSet(int hCodeSet, string urlCodeSet, string type, string brand, string model)
    SaveCodeSet() {

    }

    // void IIRUser.SuggestDifferentiatingKey([ref] int[] hCodeSets, [ref] ehiProxy.EHCIR_STD_KEYS[] keysAllowed, [ref] ehiProxy.EHC...
    SuggestDifferentiatingKey() {

    }

    // string ToString()
    ToString() {

    }

}

IRService_IRUser = new ProxyGenerator(IRService_IRUser);
