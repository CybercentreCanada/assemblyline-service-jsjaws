class System_Globalization_HijriCalendar {
    constructor() {
        // System.Globalization.CalendarAlgorithmType AlgorithmType {get;}
        this.AlgorithmType = undefined;

        // int[] Eras {get;}
        this.Eras = undefined;

        // int HijriAdjustment {get;set;}
        this.HijriAdjustment = undefined;

        // bool IsReadOnly {get;}
        this.IsReadOnly = undefined;

        // datetime MaxSupportedDateTime {get;}
        this.MaxSupportedDateTime = undefined;

        // datetime MinSupportedDateTime {get;}
        this.MinSupportedDateTime = undefined;

        // int TwoDigitYearMax {get;set;}
        this.TwoDigitYearMax = undefined;

    }

    // datetime AddDays(datetime time, int days)
    AddDays() {

    }

    // datetime AddHours(datetime time, int hours)
    AddHours() {

    }

    // datetime AddMilliseconds(datetime time, double milliseconds)
    AddMilliseconds() {

    }

    // datetime AddMinutes(datetime time, int minutes)
    AddMinutes() {

    }

    // datetime AddMonths(datetime time, int months)
    AddMonths() {

    }

    // datetime AddSeconds(datetime time, int seconds)
    AddSeconds() {

    }

    // datetime AddWeeks(datetime time, int weeks)
    AddWeeks() {

    }

    // datetime AddYears(datetime time, int years)
    AddYears() {

    }

    // System.Object Clone(), System.Object ICloneable.Clone()
    Clone() {

    }

    // bool Equals(System.Object obj)
    Equals() {

    }

    // int GetDayOfMonth(datetime time)
    GetDayOfMonth() {

    }

    // System.DayOfWeek GetDayOfWeek(datetime time)
    GetDayOfWeek() {

    }

    // int GetDayOfYear(datetime time)
    GetDayOfYear() {

    }

    // int GetDaysInMonth(int year, int month, int era), int GetDaysInMonth(int year, int m...
    GetDaysInMonth() {

    }

    // int GetDaysInYear(int year, int era), int GetDaysInYear(int year)
    GetDaysInYear() {

    }

    // int GetEra(datetime time)
    GetEra() {

    }

    // int GetHashCode()
    GetHashCode() {

    }

    // int GetHour(datetime time)
    GetHour() {

    }

    // int GetLeapMonth(int year, int era), int GetLeapMonth(int year)
    GetLeapMonth() {

    }

    // double GetMilliseconds(datetime time)
    GetMilliseconds() {

    }

    // int GetMinute(datetime time)
    GetMinute() {

    }

    // int GetMonth(datetime time)
    GetMonth() {

    }

    // int GetMonthsInYear(int year, int era), int GetMonthsInYear(int year)
    GetMonthsInYear() {

    }

    // int GetSecond(datetime time)
    GetSecond() {

    }

    // type GetType()
    GetType() {

    }

    // int GetWeekOfYear(datetime time, System.Globalization.CalendarWeekRule rule, System....
    GetWeekOfYear() {

    }

    // int GetYear(datetime time)
    GetYear() {

    }

    // bool IsLeapDay(int year, int month, int day, int era), bool IsLeapDay(int year, int ...
    IsLeapDay() {

    }

    // bool IsLeapMonth(int year, int month, int era), bool IsLeapMonth(int year, int month)
    IsLeapMonth() {

    }

    // bool IsLeapYear(int year, int era), bool IsLeapYear(int year)
    IsLeapYear() {

    }

    // datetime ToDateTime(int year, int month, int day, int hour, int minute, int second, ...
    ToDateTime() {

    }

    // int ToFourDigitYear(int year)
    ToFourDigitYear() {

    }

    // string ToString()
    ToString() {

    }

}

System_Globalization_HijriCalendar = new ProxyGenerator(System_Globalization_HijriCalendar);
