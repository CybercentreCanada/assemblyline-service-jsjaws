class System_Security_Cryptography_DESCryptoServiceProvider {
    constructor() {
        // int BlockSize {get;set;}
        this.BlockSize = undefined;

        // int FeedbackSize {get;set;}
        this.FeedbackSize = undefined;

        // byte[] IV {get;set;}
        this.IV = undefined;

        // byte[] Key {get;set;}
        this.Key = undefined;

        // int KeySize {get;set;}
        this.KeySize = undefined;

        // System.Security.Cryptography.KeySizes[] LegalBlockSizes {get;}
        this.LegalBlockSizes = undefined;

        // System.Security.Cryptography.KeySizes[] LegalKeySizes {get;}
        this.LegalKeySizes = undefined;

        // System.Security.Cryptography.CipherMode Mode {get;set;}
        this.Mode = undefined;

        // System.Security.Cryptography.PaddingMode Padding {get;set;}
        this.Padding = undefined;

    }

    // void Clear()
    Clear() {

    }

    // System.Security.Cryptography.ICryptoTransform CreateDecryptor(byte[] rgbKey, byte[] rgbIV...
    CreateDecryptor() {

    }

    // System.Security.Cryptography.ICryptoTransform CreateEncryptor(byte[] rgbKey, byte[] rgbIV...
    CreateEncryptor() {

    }

    // void Dispose(), void IDisposable.Dispose()
    Dispose() {

    }

    // bool Equals(System.Object obj)
    Equals() {

    }

    // void GenerateIV()
    GenerateIV() {

    }

    // void GenerateKey()
    GenerateKey() {

    }

    // int GetHashCode()
    GetHashCode() {

    }

    // type GetType()
    GetType() {

    }

    // string ToString()
    ToString() {

    }

    // bool ValidKeySize(int bitLength)
    ValidKeySize() {

    }

}

System_Security_Cryptography_DESCryptoServiceProvider = new ProxyGenerator(System_Security_Cryptography_DESCryptoServiceProvider);
