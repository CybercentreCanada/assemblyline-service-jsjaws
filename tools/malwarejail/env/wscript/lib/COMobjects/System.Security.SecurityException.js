class System_Security_SecurityException {
    constructor() {
        // System.Security.Permissions.SecurityAction Action {get;set;}
        this.Action = undefined;

        // System.Collections.IDictionary Data {get;}
        this.Data = undefined;

        // System.Object Demanded {get;set;}
        this.Demanded = undefined;

        // System.Object DenySetInstance {get;set;}
        this.DenySetInstance = undefined;

        // System.Reflection.AssemblyName FailedAssemblyInfo {get;set;}
        this.FailedAssemblyInfo = undefined;

        // System.Security.IPermission FirstPermissionThatFailed {get;set;}
        this.FirstPermissionThatFailed = undefined;

        // string GrantedSet {get;set;}
        this.GrantedSet = undefined;

        // string HelpLink {get;set;}
        this.HelpLink = undefined;

        // int HResult {get;set;}
        this.HResult = undefined;

        // System.Exception InnerException {get;}
        this.InnerException = undefined;

        // string Message {get;}
        this.Message = undefined;

        // System.Reflection.MethodInfo Method {get;set;}
        this.Method = undefined;

        // string PermissionState {get;set;}
        this.PermissionState = undefined;

        // type PermissionType {get;set;}
        this.PermissionType = undefined;

        // System.Object PermitOnlySetInstance {get;set;}
        this.PermitOnlySetInstance = undefined;

        // string RefusedSet {get;set;}
        this.RefusedSet = undefined;

        // string Source {get;set;}
        this.Source = undefined;

        // string StackTrace {get;}
        this.StackTrace = undefined;

        // System.Reflection.MethodBase TargetSite {get;}
        this.TargetSite = undefined;

        // string Url {get;set;}
        this.Url = undefined;

        // System.Security.SecurityZone Zone {get;set;}
        this.Zone = undefined;

    }

    // bool Equals(System.Object obj), bool _Exception.Equals(System.Object obj)
    Equals() {

    }

    // System.Exception GetBaseException(), System.Exception _Exception.GetBaseExcepti...
    GetBaseException() {

    }

    // int GetHashCode(), int _Exception.GetHashCode()
    GetHashCode() {

    }

    // void GetObjectData(System.Runtime.Serialization.SerializationInfo info, System....
    GetObjectData() {

    }

    // type GetType(), type _Exception.GetType()
    GetType() {

    }

    // string ToString(), string _Exception.ToString()
    ToString() {

    }

}

System_Security_SecurityException = new ProxyGenerator(System_Security_SecurityException);
