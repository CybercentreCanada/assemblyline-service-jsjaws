'use strict';


/**
 * Folder.js
 * This Object spoofs the Scripting.FileSystemObject Folder Object
 * Properties and methods taken from Microsoft documentation
 * https://msdn.microsoft.com/en-us/library/1c87day3(v=vs.84).aspx
 */

class Folder extends ShellFolder {
    constructor(foldername, _parent) {
        super(foldername);

        // Default properties
        // Attributes change most significantly depending on IsRootFolder true/false

        const formatted = formatPath(foldername);

        for (let i in formatted) {
            this[i] = formatted[i];
        }

        this._parent = _parent;
        this._id = _object_id++;
        this._name = "Folder[" + this._id + "]";

        util_log("new " + this._name + "(" + foldername + ")");
    }

    // Default methods
    // https://msdn.microsoft.com/en-us/library/6973t06a(v=vs.84).aspx
    Copy(destination) {
        let ret = this._parent.copyFolder(this.Path, destination);
        util_log(this._name + ".Copy(" + _truncateOutput(Array.prototype.slice.call(arguments, 0).join(",")) + ") => " + ret);
        return ret;
    }

    // https://msdn.microsoft.com/en-us/library/0k4wket3(v=vs.84).aspx
    Delete() {
        let ret = this._parent.deleteFolder(this.Path);
        util_log(this._name + ".Delete(" + _truncateOutput(Array.prototype.slice.call(arguments, 0).join(",")) + ") => " + ret);
        return ret;
    }

    // https://msdn.microsoft.com/en-us/library/kxtftw67(v=vs.84).aspx
    Move(destination) {
        let ret = this._parent.moveFolder(this.Path, destination);
        util_log(this._name + ".Move(" + _truncateOutput(Array.prototype.slice.call(arguments, 0).join(",")) + ") => " + ret);
        return ret;
    }

    // https://msdn.microsoft.com/en-us/library/5t9b5c0c(v=vs.84).aspx
    CreateTextFile(filename, overwrite, unicode) {
        let ret = this._parent.createTextFile(filename, overwrite, unicode);
        util_log(this._name + ".CreateTextFile(" + _truncateOutput(Array.prototype.slice.call(arguments, 0).join(",")) + ") => " + ret);
        return ret;
    }

    // Helper method
    toString() {
        return this._name;
    }
}

// This prevents class extension of methods
// Folder = new ProxyGenerator(Folder);
